<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>弹出菜单</title>
<script type="text/javascript">
function $(id) {
	return document.getElementById(id);
}
function Quad(start,alter,curTime,dur) {
	return start+Math.pow(curTime/dur,2)*alter;
}
function opacityAnimate(o,start,alter,dur,fx) {
	var curTime=0;
	
	var t=setInterval(function () {
		if (curTime>=dur) clearTimeout(t);
		//o.style.opacity=fx(start,alter,curTime,dur)+"px";
		setOpacity(o,fx(start,alter,curTime,dur));
		curTime+=50;
		
	},50);
}
var setOpacity = (document.documentElement.filters)?function (obj,val) {
	obj.style.filter = "alpha(opacity="+val+")";
}:function (obj,val) {
	obj.style.opacity = val/100+"";
};
window.onload=function () {
	var ul=getByClass('menu')[0];
	var btns=ul.getElementsByTagName('A'),
			items=ul.getElementsByTagName('DIV');
	new PopMenu(btns,items,function (o) {
		setOpacity(o,0);
		o.style.display="block";
		opacityAnimate(o,0,100,500,Quad);
	});
};
function PopMenu(btns,items,show,hide) {
	if (arguments.length==1) {
		//按预定的HTML结构解析出btns,items
		//this.btns=...
		//this.items=....
	} else {
		this.btns=btns;
		this.items=items;
	}
	show=show || function (o) {o.style.display="block"};
	hide=hide || function (o) {o.style.display="none"};
	for (var i=0;i<btns.length;i++) {
		(function (a) {
			btns[a].onmouseover=function () {
				show(items[a]);
			};
			btns[a].onmouseout=function () {
				hide(items[a]);
			};
		})(i);
	}
}

/*
new PopMenu(buttons,items);
new PopMenu([btn1,btn2],[item1,item2]);
new PopMenu(ul);//按预定的HTML结构解析
*/


function firstChild(node) {//返回指定节点的第一个子元素
	if (node.firstChild) {
		if (node.firstChild.nodeType==1) return node.firstChild;
		else {
			var n=node.firstChild;
			while(n=n.nextSibling) {
				if (n.nodeType==1) return n;
			}
			return null;
		}
	}
	return null;
}

function next(node) {//返回node的下一个兄弟元素
	if (node.nextSibling) {
		if (node.nextSibling.nodeType==1) return node.nextSibling;
		else {
			var n=node.nextSibling;
			while(n=n.nextSibling) {
				if (n.nodeType==1) return n;
			}
			return null;
		}
	}
	return null;
}

function lastChild() {
}

function getByClass(className,context) {
	context=context || document;
	if (context.getElementsByClassName) {
		return context.getElementsByClassName(className);
	}
	var nodes=context.getElementsByTagName('*'),
			ret=[];
	for (var i=0;i<nodes.length;i++) {
		if (hasClass(nodes[i],className)) ret.push(nodes[i]);
	}
	return ret;
}

function hasClass(node,className) {
	var names=node.className.split(/\s+/);
	for (var i=0;i<names.length;i++) {
		if (names[i]==className) return true;
	}
	return false;
}
</script>
<style type="text/css">
ul.menu {
width:300px;
height:30px;
}
ul.menu li {
display:block;
width:80px;
float:left;
height:20px;
border:2px ridge aqua;
margin:2px;
text-align:center;
}
ul.menu li a {
display:block;
width:80px;
height:20px;
background:yellow;
}
ul.menu li div {
display:none;
width:80px;
height:60px;
background:pink;
}
</style>
</head>
<body class="redStyle">
	<h1>弹出菜单</h1>
	<ul class="menu">
		<!--Comment-->  <li>
			<a href="###">按钮A</a>
			<div>内容A</div>
		</li>
		<li>
			<a href="###">按钮B</a>
			<div>内容B</div>
		</li>
		<li>
			<a href="###">按钮C</a>
			<div>内容C</div>
		</li>
	</ul>
	
	
	

</body>
</html>