<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>DOM</title>
<script type="text/javascript">
if (typeof Node=="undefined") {//对象检测
	window.Node={
		ELEMENT_NODE:1
		,ATTRIBUTE_NODE:2
		,TEXT_NODE:3
		,CDATA_SECTION_NODE:4
		,ENTITY_REFERENCE_NODE:5
		,ENTITY_NODE:6
		,PROCESSING_INSTRUCTION_NODE:7
		,COMMENT_NODE:8
		,DOCUMENT_NODE:9
		,DOCUMENT_TYPE_NODE:10
		,DOCUMENT_FRAGMENT_NODE:11
		,NOTATION_NODE:12
		,DOCUMENT_POSITION_DISCONNECTED:1
		,DOCUMENT_POSITION_PRECEDING:2
		,DOCUMENT_POSITION_FOLLOWING:4
		,DOCUMENT_POSITION_CONTAINS:8
		,DOCUMENT_POSITION_CONTAINED_BY:16
		,DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC:32
	};
}	
	
	
	
window.onload=function () {
	/*var allP = document.getElementsByTagName("*");//获取文档中所有p标签
	alert(allP.length);
	//因为页面中标签相同的元素很多,所以即使页面中只有一个p元素,getElementsByTagName也会返回一个集合
	//alert(allP[0].tagName);
	//alert(document.documentElement.tagName);
	for (var i=0;i < allP.length;i++) {
		alert(allP[i].tagName+":"+i+":"+allP[i].innerHTML);//像数组一样访问其中的每个元素
	}*/
	
	//var a=document.getElementsByName('gender');
	//var p1 = document.getElementById("p1");
	//alert(p1.getAttribute("id"));
	//p1.setAttribute("title","Value");
	//getAttribute(属性名)
	//alert(document.getElementsByTagName("label")[0].for);
	//var de=document.documentElement;
	//本来可以使用getElementsByTagName的
	//var head = document.getElementsByTagName("head")[0];
	//var body = document.getElementsByTagName("body")[0];
	//document.body;//body
	//var header=document.getElementById("header");
	//alert(header.nodeType);
	//alert(header.firstChild.nodeType);
	//header.innerHTML="adfds<em>af</em>sdaf";
	/*header.lastChild.nodeValue="adfds<em>af</em>sdaf";
	alert(header.innerHTML);*/
	//alert(de.firstChild);//文档根节点的firstChild是head
	//var b=de.lastChild;//文档根节点的lastChild是body
	//alert(document.body.previousSibling.nodeName);
	//alert(de.firstChild.nextSibling.nodeName);
	//innerHTML不是W3C标准,起初是IE先实现，其它浏览器都很好的实现了innerHTML
	/*var nodes=document.body.childNodes;
	nodes=filterSpaceNode(nodes);
	//alert(nodes.length);
	alert(nextSibling(header).nodeName);*/
	//alert(header.childNodes[1].tagName);
	//alert(document.nodeType);
	/*var a=document.getElementsByTagName("*");
	alert(a[0].nodeType);*/
	/*var p=document.getElementsByTagName("p")[0];
	var a=[];
	for (var i in Node) {
		a.push(i+":"+Node[i]+"<br />");
	}
	p.innerHTML=a.join("");*/
	

	//var header=document.getElementById("header");
	//var attrs=header.attributes;//属性节点列表
	//var attr=attrs.getNamedItem("title");
	//attrs.removeNamedItem("title");
	//alert(attr.nodeValue);
	//getNamedItem(属性名) 返回值:一个属性节点
	
	//for (var i=0;i<attrs.length;i++) {
		//alert(i+"\n"+attrs[i].nodeName+":"+attrs[i].nodeValue);
	//}
	
	
	
	//只返回body里的元素
	/*var a=document.body.getElementsByTagName("*");
	alert(a.item(0));*/
	
	
	//创建了一个DIV元素
	/*var div=document.createElement("div");
	div.appendChild(document.createTextNode("文本节点"));
	
	
	var textNode=document.createTextNode("adf<em>asdfsd");
	
	//alert(textNode.nodeValue);
	//HTML元素的方法:appendChild(node)
	document.body.appendChild(textNode);
	document.body.appendChild(div);*/
	
	//node.removeChild(node.childNodes[n]);
	//node.removeChild(node的子节点)
	
	var header=document.getElementById("header");
	/*document.body.removeChild(header);
	alert("Stop"+"\n"+header);
	document.body.appendChild(header);*/
	var div=document.createElement("div");
	div.innerHTML="DIV";
	//alert("Stop");
	var p=document.getElementsByTagName("p")[0];
	//document.body.replaceChild(header,p);
	//node.replaceChild(新节点，要被替换的节点-一定要是node的子节点)
	var oDiv=document.getElementById("oDiv");
	//alert(oDiv.parentNode.tagName);//父节点
	//document.body.insertBefore(div,oDiv);
	//before(div,oDiv);
	delNode(header);
	//node.insertBefore(新节点在前,旧节点在后-必须要是node的子节点);
};
/*

function filterSpaceNode(nodes) {//把空白文本节点过滤掉
	var ret=[];
	for(var i=0;i<nodes.length;i++) {
		if (nodes[i].nodeType===3 
				&& /^\s+$/.test(nodes[i].nodeValue)) {
					continue;
		}
		ret.push(nodes[i]);
	}
	return ret;
}

function nextSibling(node) {
	var n=node.nextSibling;
	if (n!=null && n.nodeType===3 && /^\s+$/.test(n.nodeValue)) {
		return n.nextSibling;
	}
	return n;
}*/
//class className
//for htmlFor

function before(newNode,oldNode) {
	oldNode.parentNode.insertBefore(newNode,oldNode);
}

function delNode(node) {
	node.parentNode.removeChild(node);
}

//把空格当成文本节点，是标准规定的
</script>
</head>
<body>
	
	<p>HTML那层层嵌套的代码就像一棵<em>树</em>一样!</p>
	
	
	<div id="oDiv">一层一层的树 </div>
	<h1 id="header">DOM</h1>
</body>



</html>