/**
 * 单例模式在javascript中特别常用
 * 我们有的时候总在用但是不知道他就是单例
 * 我们用的还不灵活
 * 在javascript中什么叫做单例模式?
 * 通过确保单例对象只存在一个实例,你就可以确信自己的所有的代码使用的多是同样的全局资源
 */
(function(){
	//先看一个最常用的,也是最简单的单例
	//例如用户登录的时候前台有一个专门的对象存储用户的信息.这个在extjs开发中很使用
	//放然了真正的项目数据是从后台初始化好通过ajax请求回来的
	var UserInfo = {
		name:"USPCAT.COM",
		code:"00101",
		deptName:"PD",
		deptCode:"PD001",
		getName:function(){
			//...
			return "YUNFENGCHENG"
		}
	}
	//这个就是一个最简单的单体模式
	//他用来划分命名空间,并且将一群相关的属性和方法阻止道一起,如果他可以被初始化就只能被初始化一次
	//我们可以用"."来访问他了
	alert(UserInfo.deptName);
	
	//下面来理解下"单体划分命名空间"
	//划分命名空间的好处在于程序员可以很清楚的知道他们调用的单体实例大概是干什么用的
	var comm = {};//定义单例同对象
	comm.userInfo = {
		name:"USPCAT.COM",
		code:"00101"		
	}
	comm.funcInfo = {
		funcName:"PCAT2"
	}
	//在大型程序下 存在着你写的代码,有外卖弄的库代码,有同事些的接口 那么命名空间很好的把它们区分开
	//javascript的单体不是多高深的知识,他就是叫你如何用简单的东西组织大型项目(这点只能是慢慢体会啦...).
})()





