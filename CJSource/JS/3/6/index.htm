<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>事件(上)</title>
<script type="text/javascript">
	
/*function addEvent(obj,evt,fn) {
	//给某个对象添加多个事件监听函数
	//evt是事件名
	var saved;
	if (typeof obj["on"+evt] =="function") {
		//第一步，检测是否已经注册过事件监听函数
		saved=obj["on"+evt];
	}
	//要删除指定函数，必须先要保存指定的函数（保存到一个数组）
	obj["on"+evt]=function () {
		if (saved) saved.call(this);
		//if (fn.flag!==false) 
		fn.call(this);
	};
}*/



	
	
	//我写的代码,第一个人
window.onload=initAll;//load是事件名

//addEvent(window,'load',initAll);

function initAll() {
	var oDiv = document.getElementById("oDiv");
	/*oDiv.onclick =fn1;
	oDiv.onclick =fn2;*/
	/*oDiv.onclick=function () {
		fn1();
		fn2();
	};*/
	/*function fn1() {alert("我被覆盖了！")}
	function fn2() {alert("只有我被执行到！")}*/
	/*oDiv.onclick=function () {
		//this 指向oDiv
		toBig.call(this);
		
	};*/
	
	
	
	
	//oDiv.onclick=toBig;
	
	addEvent(oDiv,'click',toBig);
	function toBig() {
		this.className="big";
		//this.onclick=toSmall;
		addEvent(this,'click',toSmall);
		//toBig.flag=false;//禁用
		//toSmall.flag=true;//启用
		//删除toBig
	}
	function toSmall() {
		this.className="small";
		//this.onclick=toBig;
		
		addEvent(this,'click',toBig);
		//toBig.flag=true;
		//toSmall.flag=false;
	}
}


</script>
<style type="text/css">
	.big {
	width:200px;
	height:200px;
	}
	.small {
	width:100px;
	height:100px;
	}
</style>
</head>
<body>
	<h1>事件(上)</h1>

	<div id="oDiv" class="small" style="border:2px solid blue;background:pink;">oDiv</div>
<script>
	//另一个写的代码
	/*
	var saved;
	if (typeof window.onload =="function") {
		saved=window.onload;//上一个人注册的window.onload函数被保存了
	}
	window.onload=function () {
		alert("后一个注册的");
		if (saved) saved();//手动调用
	};*/
	
	/*
	var fns=[];//所有事件监听函数保存的地方
	if (typeof window.onload=="function") {
		fns.push(window.onload);
	}
	//fns.push(init);
	
	window.onload=function () {
		for (var i=0;i<fns.length;i++) {
			fns[i]();
		}
		
	};*/
	function addEvent(obj,evt,fn) {
		if (!obj.functions) obj.functions={};
		if (!obj.functions[evt])
			obj.functions[evt]=[];
			
			//obj.functions["mousedown"]=[]
		var functions=obj.functions[evt];
		for (var i=0;i<functions.length;i++) {
			if (functions[i]===fn) return obj;
		}
		functions.push(fn);
		//fn.index=functions.length-1;
		
		
		if (typeof obj["on"+evt]=="function") {
			//alert(obj["on"+evt]);//当这一行执行到时，obj["on"+evt] 就是handler
			//alert(obj["on"+evt]==handler);
			if (obj["on"+evt]!=handler)
				functions.push(obj["on"+evt]);
		}
		obj["on"+evt]=handler;
		
		
		
	}
	
	function handler(evt) {//哪个事件发生了?
		evt =evt || window.event;
		evt=evt.type;
		var functions=this.functions[evt];
		for (var i=0;i<functions.length;i++) {
			if (functions[i]) functions[i].call(this);
		}
	}
	
	
	window.onload=null;
	//alert(init1.toString());

	addEvent(window,'load',init1);
	
	//addEvent(document,'click',init1);
	//addEvent(document,'mousedown',init1);
	
	addEvent(window,'load',init2);
	//delEvent(window,'load',init2);
	
	//window.__a__="Private";
	
	function delEvent(obj,evt,fn) {
		var fns=obj.functions;
		if (fns!=null) {
			fns=fns[evt];
			if (fns!=null) {
				
				for (var i=0;i<fns.length;i++) {
					if (fns[i]==fn) {
						delete fns[i];
					}
				}
			}
		}
		return obj;
	}
	
	
	function init1() {
		alert("先注册的");
		//document.body.innerHTML+="ADF<br />";
	}
	function init2() {
		alert("后一个注册的");
	}

</script>
</body>
</html>